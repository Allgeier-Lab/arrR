[{"path":[]},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to arrR","title":"Contributing to arrR","text":"outlines propose change arrR. several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to arrR","text":"Please note arrR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":[]},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How to contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to arrR","text":"Browse documentation see can find solution. Still stuck? Open issue GitHub GitHub. ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer mhk.hesselbarth<>gmail.com. Please try include reproducible example using example reprex package.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How to contribute","what":"Propose an idea üí°","title":"Contributing to arrR","text":"Take look documentation issue GitHub list see isn‚Äôt included suggested yet. , please open new issue! can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How to contribute","what":"Report a bug üêõ","title":"Contributing to arrR","text":"Report issue GitHub can fix . good bug report makes easier us , please include: content utils::sessionInfo(). details local setup might helpful troubleshooting. Detailed steps reproduce bug , please try include reproducible example using example reprex package.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How to contribute","what":"Improve the documentation üìñ","title":"Contributing to arrR","text":"Good documentation makes difference, help improve welcome! use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"pull-request-process-Ô∏è","dir":"","previous_headings":"How to contribute","what":"Pull request process ‚ÜïÔ∏è","title":"Contributing to arrR","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. Don‚Äôt forget pull new changes starting work! Open RStudio project file (.Rproj) install development dependencies (e.g., using devtools::install_dev_deps()). Make sure package passes R CMD check running devtools::check(). Create new Git branch use name briefly describes proposed changes. Make changes: Write code. Test code (bonus points adding unit tests using testthat package). Document code (see function documentation ). Check code devtools::check() aim 0 errors, warnings notes. Commit push changes. Submit pull request. New code follow tidyverse style guide.","code":""},{"path":"https://allgeier-lab.github.io/arrR/CONTRIBUTING.html","id":"references","dir":"","previous_headings":"How to contribute > Pull request process ‚ÜïÔ∏è","what":"References","title":"Contributing to arrR","text":"CONTRIBUTING.md adapted .","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://allgeier-lab.github.io/arrR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://allgeier-lab.github.io/arrR/articles/general-background.html","id":"model-concept","dir":"Articles","previous_headings":"","what":"Model concept","title":"General Background","text":"goal arrR simulate seagrass primary production around artificial reefs (ARs) using individual-based simulation model (IBM, DeAngelis Grimm, 2014). grid-based simulation environment (also referred seafloor) populated fish individuals belonging species. Seagrass primary production simulated using single-nutrient primary production model adapted DeAngelis (1992). Consumption excretion nutrients fish individuals follows principles bioenergetics (Schreck Moyle, 1990). Schematic overview model concept (Adapted DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. https://doi.org/10.1007/978-94-011-2342-6.","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/general-background.html","id":"processes","dir":"Articles","previous_headings":"","what":"Processes","title":"General Background","text":"simulation started using run_simulation() function. includes simulation several processes following scheduling: Nutrient input: iteration, specified amount nutrients added cell seafloor simulation environment. processes simulated corresponding vector nutrient amounts provided run_simulation(). 1. Seagrass dynamics: Simulates () belowground (BG) aboveground (AG) seagrass slough (.e., loss standing biomass detrital biomass). amount sloughed biomass depends current biomass iteration (sloughed th closer maximum). (ii) Nutrient uptake water column simulated based Michaelis-Menten uptake dynamics (Lee Dunton, 1999). total uptake depends available nutrients current biomass. (iii) Allocation total nutrient uptake BG AG biomass. much nutrient uptake allocated BG AG mostly governed current capacity BG biomass. 2. Mineralization: Simulates mineralization detrital biomass water column nutrients. iteration, fraction total detrital biomass remineralized water column nutrients. Additionally, fraction fish detrital biomass (.e., pool nutrients died individuals) decomposed detrital biomass. 3. Fish movement: Simulates movement fish individuals across simulation environment. Movement can random, attracted towards AR cells based fish characteristics. moved distance iterations used calculate activity individuals. information movement, please see vignette(\"movement-behaviors\"). Uses torus translation boundary simulation environment. 4. Fish respiration: bioenergetics model used simulate respiration fish individuals based body size movement activity. , homogeneous water temperature throughout simulation environment assumed. 5. Fish growth, consumption excretion: Fish individual growth simulated using Bertalanffy growth curve (Froese Pauly, 2019). Length growth converted body mass individuals need consume required nutrients follow growth curve including respiration. amount consumed detrital biomass. detrital biomass smaller required consumption amount individuals, mortality takes place. Lastly, fish individuals excrete non-required consumption nutrients pool. 6. Fish (background) mortality: Simulates background mortality fish individuals based body size. mortality probability increases increasing body size. mortality events increase (fish) detrital biomass. 7. Nutrients detritus diffusion: Simulates diffusion detritus biomass water-column nutrients across neighboring cells. Nutrients output: Simulates certain fraction water column nutrients lost cell timestep. simulated corresponding parameter set zero.","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/general-background.html","id":"references","dir":"Articles","previous_headings":"Processes","what":"References","title":"General Background","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. https://doi.org/10.1007/978-94-011-2342-6 DeAngelis, D.L., Grimm, V., 2014. Individual-based models ecology four decades. F1000Prime Reports 6, 1‚Äì6. https://doi.org/10.12703/P6-39 Froese, R., Pauly, D., 2019. FishBase. World Wide Web electronic publication [WWW Document]. URL <www.fishbase.org> (accessed 9.9.20). Lee, K.-S., Dunton, K.H., 1999. Inorganic nitrogen acquisition seagrass Thalassia testudinum: Development whole-plant nitrogen budget. Limnol. Oceanogr. 44, 1204‚Äì1215. https://doi.org/10.4319/lo.1999.44.5.1204 Schreck, C.B., Moyle, P.B. (Eds.), 1990. Methods fish biology. American Fisheries Society, Bethesda, MD, USA.","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"how-to-use-arrr","dir":"Articles","previous_headings":"","what":"How to use arrR","title":"Get started","text":"can always use ? front function see help page. many functions, additionally arguments can specify, necessarily explained .","code":"library(arrR) library(dplyr) library(ggplot2)"},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"import-and-change-starting-values-and-parameters","dir":"Articles","previous_headings":"How to use arrR","what":"1. Import and change starting values and parameters","title":"Get started","text":"installed loaded package, can access default/exemplary starting values parameters model. Since objects just named lists, can easily change certain parameters. pass objects check_parameters(), function check required values available return warnings . course, can also load data list containing starting values parameters. read_parameters() function can help . can also create starting values parameter lists completely scratch long two named lists containing required values. Please see vignette(\"starting-values-parameters\") information parameters.","code":"# get starting values starting_values <- arrR::arrR_starting_values  # get parameters parameters <- arrR::arrR_parameters  # change some starting values and parameters starting_values$pop_n <- 8  parameters$pop_reserves_max <- 0.1  parameters$seagrass_thres <- -1/4  # check if all parameters are present and meaningful check_parameters(starting_values = starting_values, parameters = parameters) #> > ...Checking starting values... #> > ...Checking parameter values... #> > ...Checking if starting values are within parameter boundaries... #> > All checking done!"},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"setup-seafloor-and-fish-population","dir":"Articles","previous_headings":"How to use arrR","what":"2. Setup seafloor and fish population","title":"Get started","text":"Next, need setup seafloor fish population. want add artificial reefs (ARs), simply provide matrix x- andy-coordinates reef cells. center cell always coordinate x,y(0,0). Additionally, setting seafloor, need specify dimensions x- y-directions grain one cell. function get_stable_values allows calculate nutrients detritus amount keep whole ecosystem theoretical stable (excluding fish detritus consumption nutrient excretion). values can used set simulation environment.","code":"# create 5 reef cells in center of seafloor reef_matrix <- matrix(data = c(-1, 0, 0, 1, 1, 0, 0, -1, 0, 0),                        ncol = 2, byrow = TRUE)  # get stable nutrient/detritus values stable_values <- get_stable_values(starting_values = starting_values,                                    parameters = parameters) #> > Returning no nutrient input value because 'nutrients_output' = 0.  starting_values$nutrients_pool <- stable_values$nutrients_pool  starting_values$detritus_pool <- stable_values$detritus_pool  # create seafloor input_seafloor <- setup_seafloor(dimensions = c(100, 100), grain = 1,                                   reefs = reef_matrix, starting_values = starting_values) #> > ...Creating seafloor with 100 rows x 100 cols... #> > ...Creating 5 artifical reef cells...  # create fishpop input_fishpop <- setup_fishpop(seafloor = input_seafloor,                                 starting_values = starting_values,                                 parameters = parameters) #> > ...Creating 8 individuals within extent(-50, 50, -50, 50)..."},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"run-the-model","dir":"Articles","previous_headings":"How to use arrR","what":"3. Run the model","title":"Get started","text":"run_simulation() function core function package starts simulation run. need provide previously created seafloor fish population well parameters. Additionally, need specify total run time simulation (# iterations called ). , can specify often seagrass related processes simulated, e.g.¬†day using seagrass_each. Last, produced output can quite large, can save every j iterations, specified save_each. model still simulate processes iteration, however, safe return specified iterations reduce required memory. One important function arguments run_simulation() movement argument, specifites individiauls move across simulation environment. information, please see vignette(\"movement-behaviors\").","code":"# one iterations equals 120 minutes min_per_i <- 120  # run the model for ten years years <- 10 max_i <- (60 * 24 * 365 * years) / min_per_i  # run seagrass once each day days <- 1 seagrass_each <- (24 / (min_per_i / 60)) * days  # save results only every 365 days days <- 365 save_each <- (24 / (min_per_i / 60)) * days  result <- run_simulation(seafloor = input_seafloor, fishpop = input_fishpop,                          parameters = parameters, movement = \"attr\",                          max_i = max_i, min_per_i = min_per_i,                           seagrass_each = seagrass_each, save_each = save_each)"},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"look-at-model-results","dir":"Articles","previous_headings":"How to use arrR","what":"4. Look at model results","title":"Get started","text":"can get first glance results simply printing model output. gives summary statistics last iteration model. returning object mdl_rn object simply list ‚Äúhood‚Äù, analyzing results pretty straightforward. Simply access data need.  Lastly, can plot results. Make sure also check summarize argument plot function.","code":"# print model results result #> Total time : 43800 iterations (3650 days) [Burn-in: 0 iter.] #> Saved each : 4380 iterations (365 days) #> Seafloor   : 100 rows x 100 cols; 5 reef cells #> Fishpop    : 8 indiv (movement: 'attr') #>  #> Seafloor : (ag_biomass, bg_biomass, nutrients_pool, detritus_pool, detritus_fish) #> Minimum  : 98.408, 604.46, 0, 2.972, 0 #> Mean     : 110.483, 610.06, 0, 3.014, 0 #> Maximum  : 193.01, 730.655, 0.007, 3.024, 0 #>  #> Fishpop  : (length, weight, died_consumption, died_background) #> Minimum  : 18.218, 116.735, 0, 1 #> Mean     : 24.487, 316.556, 0, 1 #> Maximum  : 29.606, 541.774, 0, 1 # show all elements of result list names(result) #>  [1] \"seafloor\"           \"fishpop\"            \"movement\"           #>  [4] \"max_dist\"           \"pop_reserves_thres\" \"nutr_input\"         #>  [7] \"starting_values\"    \"parameters\"         \"coords_reef\"        #> [10] \"extent\"             \"grain\"              \"dimensions\"         #> [13] \"max_i\"              \"min_per_i\"          \"burn_in\"            #> [16] \"seagrass_each\"      \"save_each\"  # show e.g. result for fish population head(result$fishpop) #>   id age          x          y  heading    length    weight activity #> 1  1   0   3.341987 -31.078145 318.4036 12.775434 38.022335        0 #> 2  2   0  35.074580  -9.861917 202.8461  8.926887 12.244701        0 #> 3  3   0 -24.954886  -8.719367 246.2011 11.012510 23.778693        0 #> 4  4   0  44.691974 -37.473908 213.0703  7.564680  7.255082        0 #> 5  5   0  33.028622 -45.263876 219.9091 12.063108 31.715963        0 #> 6  6   0   3.359647 -13.908296 324.0644 10.363634 19.625424        0 #>   respiration   reserves reserves_max behavior consumption excretion #> 1           0 0.11402898   0.11402898        3           0         0 #> 2           0 0.03672186   0.03672186        3           0         0 #> 3           0 0.07131230   0.07131230        3           0         0 #> 4           0 0.02175799   0.02175799        3           0         0 #> 5           0 0.09511617   0.09511617        3           0         0 #> 6           0 0.05885665   0.05885665        3           0         0 #>   died_consumption died_background timestep burn_in #> 1                0               0        0      no #> 2                0               0        0      no #> 3                0               0        0      no #> 4                0               0        0      no #> 5                0               0        0      no #> 6                0               0        0      no  # get results of fish population of the final timestep and plot weight ~ length (final_fishpop <- dplyr::filter(result$fishpop, timestep == max(timestep)) %>%    ggplot2::ggplot(ggplot2::aes(x = length, y = weight)) +      ggplot2::geom_point(shape = 1) +      ggplot2::geom_smooth(method = \"lm\", formula =  \"y ~ x\", size = 0.5) +     ggplot2::labs(x = \"Length [cm]\", y = \"Weight [g]\") +     ggplot2::theme_classic()) # plot map of seafloor plot(result, what = \"seafloor\")"},{"path":"https://allgeier-lab.github.io/arrR/articles/get-started.html","id":"various","dir":"Articles","previous_headings":"How to use arrR","what":"5. Various","title":"Get started","text":"arrR comes many helper functions, get_density(), get_limits(), filter_mdlrn() summarize_mdlrn(). Make sure check Index overview.","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/movement-behaviors.html","id":"movement-behaviors","dir":"Articles","previous_headings":"","what":"Movement behaviors","title":"Movement behaviors","text":"arrR model allows specify different movement behaviors model run. ‚Ä¶Work progress‚Ä¶","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/movement-behaviors.html","id":"random-movement","dir":"Articles","previous_headings":"Movement behaviors","what":"Random movement","title":"Movement behaviors","text":"‚Ä¶Work progress‚Ä¶","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/movement-behaviors.html","id":"attracted-movement","dir":"Articles","previous_headings":"Movement behaviors","what":"Attracted movement","title":"Movement behaviors","text":"‚Ä¶Work progress‚Ä¶","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/movement-behaviors.html","id":"behavioral-movement","dir":"Articles","previous_headings":"Movement behaviors","what":"Behavioral movement","title":"Movement behaviors","text":"‚Ä¶Work progress‚Ä¶","code":""},{"path":"https://allgeier-lab.github.io/arrR/articles/publication-record.html","id":"list-of-publications","dir":"Articles","previous_headings":"","what":"List of publications","title":"Publication record","text":"‚Ä¶Work progress‚Ä¶","code":""},{"path":[]},{"path":[]},{"path":"https://allgeier-lab.github.io/arrR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximillian H.K. Hesselbarth. Author, maintainer. Kenzo E. Esquivel. Author. Katrina S. Munsterman. Author. Samantha Iliff. Illustrator. Jacob E. Allgeier. Research team head.","code":""},{"path":"https://allgeier-lab.github.io/arrR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Esquivel, K.E., Hesselbarth, M.H.K., Allgeier, J.E. Mechanistic support increased primary production around artificial reefs. Manuscript submitted publication. v0.0","code":"@Article{,   title = {Mechanistic support for increased primary production around artificial reefs},   author = {Kenzo E. Esquivel and Maximilian H.K. Hesselbarth and Jacob E. Allgeier},   journal = {tba},   year = {Manuscript submitted for publication},   url = {https://github.com/Allgeier-Lab/arrR},   version = {0.0}, }"},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"arrr--artifical-reefs-in-r-","dir":"","previous_headings":"","what":"Individual-Based Simulation Model of Artifical Reefs in R","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"goal arrR simulate seagrass primary production around artificial reefs (ARs). detailed model description, please see vignette(\"general-background\"). Please see vignette(\"get-started\") short tutorial use arrR.","code":""},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"cite arrR publication acknowledge use, please use following temporary citation information, substituting ‚Äòv0.0‚Äô version package used: Esquivel, K.E., Hesselbarth, M.H.K., Allgeier, J.E. Mechanistic support increased primary production around artificial reefs. Manuscript submitted publication. v0.0 information, please see vignette(\"publication-record\"). get BibTex entry, please use citation(\"arrR\").","code":""},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"can install arrR GitHub following line code. want install recent development version, please specify argument ref = \"development\" within function.","code":"remotes::install_github(repo = \"Allgeier-Lab/arrR\", ref = \"main\")"},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get started","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"Please see vignette(\"get-started\") short tutorial use arrR package.","code":""},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"Please note arrR package released Contributor Code Conduct. contributing project, agree abide terms. see contribute project, please see Contributing guidelines.","code":""},{"path":"https://allgeier-lab.github.io/arrR/index.html","id":"contact","dir":"","previous_headings":"Code of Conduct","what":"Contact","title":"Individual-Based Simulation Model of Artifical Reefs in R","text":"Questions bugs? Please get touch via mhk.hesselbarth<>gmail.com submit issue . always happy hear input!","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR.html","id":null,"dir":"Reference","previous_headings":"","what":"arrR ‚Äî arrR","title":"arrR ‚Äî arrR","text":"Individual-based simulation model analyze artificial reefs combination fish population influence seagrass growth. information use model, please see https://allgeier-lab.github.io/arrR/. detailed model description, see Esquivel, K.E., Hesselbarth, M.H.K., Allgeier, J.E. Mechanistic support increased primary production around artificial reefs. Manuscript submitted publication.","code":""},{"path":[]},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arrR ‚Äî arrR","text":"Maintainer: Maximillian H.K. Hesselbarth mhk.hesselbarth@gmail.com (ORCID) Authors: Kenzo E. Esquivel kesquivel@berkeley.edu (ORCID) Katrina S. Munsterman kmunster@umich.edu (ORCID) contributors: Samantha Iliff siliff@umich.edu (ORCID) [illustrator] Jacob E. Allgeier jeallg@umich.edu (ORCID) [research team head]","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Default parameters ‚Äî arrR_parameters","title":"Default parameters ‚Äî arrR_parameters","text":"List default parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default parameters ‚Äî arrR_parameters","text":"","code":"arrR_parameters"},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_parameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default parameters ‚Äî arrR_parameters","text":"List","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_parameters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Default parameters ‚Äî arrR_parameters","text":"Citations parameters starting values can found Esquivel et al (2021). Mechanistic support increased primary production around artificial reefs. Manuscript preparation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_starting_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Default starting values ‚Äî arrR_starting_values","title":"Default starting values ‚Äî arrR_starting_values","text":"List default starting values.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_starting_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default starting values ‚Äî arrR_starting_values","text":"","code":"arrR_starting_values"},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_starting_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default starting values ‚Äî arrR_starting_values","text":"List","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/arrR_starting_values.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Default starting values ‚Äî arrR_starting_values","text":"Citations parameters starting values can found Esquivel et al (2021). Mechanistic support increased primary production around artificial reefs. Manuscript preparation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_size ‚Äî calc_size","title":"calc_size ‚Äî calc_size","text":"Calculate size weight fish individuals.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_size ‚Äî calc_size","text":"","code":"calc_size(   pop_n,   pop_mean_size,   pop_var_size,   pop_linf,   pop_a,   pop_b,   use_log = TRUE )"},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_size ‚Äî calc_size","text":"pop_n Numeric starting values number individuals. pop_mean_size, pop_var_size Numeric parameters mean size variance. pop_linf, pop_a, pop_b Numeric parameters weight calculation. use_log Logical TRUE, random log distribution used.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calc_size ‚Äî calc_size","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calc_size ‚Äî calc_size","text":"Calculate size weight fish individuals based length-weight relationships. starting length randomly drawn log-norm uniform distribution. uniform distribution used, minimum maximum based 10","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"calc_size ‚Äî calc_size","text":"Froese, R., Pauly, D., 2019. FishBase. World Wide Web electronic publication [WWW Document]. <www.fishbase.org> LENGTH-WEIGHT Table. <https://www.fishbase.org/manual/fishbasethe_length_weight_table.htm>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/calc_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calc_size ‚Äî calc_size","text":"","code":"if (FALSE) { calc_size(pop_n = 8, pop_mean_size = arrR_starting_values$pop_mean_size, pop_var_size = arrR_starting_values$pop_var_size, pop_linf = arrR_parameters$pop_linf, pop_a = arrR_parameters$pop_a, pop_b = arrR_parameters$pop_b, use_log = TRUE) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"check_parameters ‚Äî check_parameters","title":"check_parameters ‚Äî check_parameters","text":"Check model parameters starting values.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_parameters ‚Äî check_parameters","text":"","code":"check_parameters(starting_values = NULL, parameters = NULL, verbose = TRUE)"},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check_parameters ‚Äî check_parameters","text":"starting_values List starting value parameters. parameters List model parameters. verbose TRUE, progress reports printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check_parameters ‚Äî check_parameters","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check_parameters ‚Äî check_parameters","text":"function checks required starting values parameters provided. parameters /starting values missing, vector name corresponding values returned. arguments provided, list required parameters values printed","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/check_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check_parameters ‚Äî check_parameters","text":"","code":"check_parameters() #> > Required starting values: #> bg_biomass #> ag_biomass #> nutrients_pool #> detritus_pool #> pop_n #> pop_mean_size #> pop_var_size #>  #> > Required parameters: #> bg_biomass_min #> bg_biomass_max #> bg_v_max #> bg_k_m #> bg_gamma #> ag_biomass_min #> ag_biomass_max #> ag_v_max #> ag_k_m #> ag_gamma #> seagrass_thres #> seagrass_slope #> seagrass_slough #> nutrients_diffusion #> nutrients_output #> detritus_mineralization #> detritus_diffusion #> detritus_fish_decomp #> detritus_fish_diffusion #> detritus_output #> move_mean #> move_var #> move_border #> move_reef #> move_return #> pop_reserves_max #> pop_reserves_thres_lo #> pop_reserves_thres_hi #> pop_reserves_consump #> pop_a #> pop_b #> pop_k #> pop_linf #> pop_n_body #> resp_intercept #> resp_slope #> resp_temp_low #> resp_temp_optm #> resp_temp_max"},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":null,"dir":"Reference","previous_headings":"","what":"filter_mdlrn ‚Äî filter_mdlrn","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"Filter model run specific timestep.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"","code":"filter_mdlrn(result, timestep = max(result$max_i))"},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"result mdl_rn object simulation run. timestep Vector timesteps select","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"mdl_rn","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"functions allows return specific timesteps mdl_rn object created run_simulation. function ensures object still mdl_rn object. Currently, one timestep can returned.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/filter_mdlrn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter_mdlrn ‚Äî filter_mdlrn","text":"","code":"if (FALSE) { filter_mdlrn(result = result_rand, timestep = 10200) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":null,"dir":"Reference","previous_headings":"","what":"get_density ‚Äî get_density","title":"get_density ‚Äî get_density","text":"Get density fish individuals within cell.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_density ‚Äî get_density","text":"","code":"get_density(result, timestep = result$max_i, normalize = FALSE, verbose = TRUE)"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_density ‚Äî get_density","text":"result mdl_rn object simulation run. timestep Integer specify maximum timestep. normalize Logical TRUE count divided timesteps. verbose TRUE, progress reports printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_density ‚Äî get_density","text":"data.frame","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_density ‚Äî get_density","text":"Calculates fish density cells. Thus, total count fish occurrences within raster cell divided maximum timestep. Please keep mind timestep saved run_simulation, returned density might \"true\" density occurrences might missed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_density ‚Äî get_density","text":"","code":"if (FALSE) { get_density(result = result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"get_limits ‚Äî get_limits","title":"get_limits ‚Äî get_limits","text":"Get list min max values better plotting.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_limits ‚Äî get_limits","text":"","code":"get_limits(result, timestep = result[[1]]$max_i)"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_limits ‚Äî get_limits","text":"result List results model run. timestep Integer specify timestep plotted.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_limits ‚Äî get_limits","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_limits ‚Äî get_limits","text":"Returns list minimum maximum values several model result runs better plotting. list includes range ) ag_biommass, ii) bg_biomass, iii) nutrients_pool, iv) detritus_pool. Can provided limits argument plot.mdl_rn function.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_limits ‚Äî get_limits","text":"","code":"if (FALSE) { get_limits(result = list(result_rand, result_attr)) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"get_neighbors ‚Äî get_neighbors","title":"get_neighbors ‚Äî get_neighbors","text":"Get ID neighboring cells.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_neighbors ‚Äî get_neighbors","text":"","code":"get_neighbors(x, direction = 8, cpp = FALSE)"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_neighbors ‚Äî get_neighbors","text":"x RasterLayer. direction Integer specifying 4 8 neighborhood rule applied. cpp Logical specifying indices start 0 according C++ indexing.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_neighbors ‚Äî get_neighbors","text":"matrix","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_neighbors ‚Äî get_neighbors","text":"Get matrix cell IDs neighboring cells. direction arguments allows specifiy cells considered neighbors (direction = 4: \"Rook's case\"; direction = 8: \"Queen's case\").","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_neighbors ‚Äî get_neighbors","text":"","code":"if (FALSE) { get_neighbors(seafloor) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":null,"dir":"Reference","previous_headings":"","what":"get_production ‚Äî get_production","title":"get_production ‚Äî get_production","text":"Summarize production model run.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_production ‚Äî get_production","text":"","code":"get_production(result, lag = TRUE)"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_production ‚Äî get_production","text":"result mdl_rn object simulation run. lag Logical cumulative difference previous timestep returned.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_production ‚Äî get_production","text":"data.frame","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_production ‚Äî get_production","text":"Function summarize ag bg production timestep. lag argument allows return cumulative value, difference previous timestep.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_production ‚Äî get_production","text":"","code":"if (FALSE) { get_production(result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":null,"dir":"Reference","previous_headings":"","what":"get_stable_values ‚Äî get_stable_values","title":"get_stable_values ‚Äî get_stable_values","text":"Get values stable biomass growth.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_stable_values ‚Äî get_stable_values","text":"","code":"get_stable_values(   starting_values,   parameters,   fishpop = FALSE,   min_per_i = NULL,   verbose = TRUE )"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_stable_values ‚Äî get_stable_values","text":"starting_values List starting value parameters. parameters List model parameters. fishpop Logical TRUE estimate maximum consumption added detritus. min_per_i Integer specify minutes per . verbose Logical message printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_stable_values ‚Äî get_stable_values","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_stable_values ‚Äî get_stable_values","text":"Returns list starting values ) nutrients_pool ii) detritus_pool allow stable seagrass growth fish individuals present. means, pools contain exactly amount balance sloughed bg_biomass ag_biomass  timestep. fishpop = TRUE estimate detritus consumption one fish individual maximum size added detritus pool.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_stable_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_stable_values ‚Äî get_stable_values","text":"","code":"get_stable_values(starting_values = arrR_starting_values, parameters = arrR_parameters) #> > Returning no nutrient input value because 'nutrients_output' = 0. #> $nutrients_pool #> [1] 0.0003205054 #>  #> $detritus_pool #> [1] 3.204733 #>  #> $nutr_input #> NULL #>"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":null,"dir":"Reference","previous_headings":"","what":"get_starting_values ‚Äî get_starting_values","title":"get_starting_values ‚Äî get_starting_values","text":"Get mean starting values model run.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_starting_values ‚Äî get_starting_values","text":"","code":"get_starting_values(seafloor_values, fishpop_values)"},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_starting_values ‚Äî get_starting_values","text":"seafloor_values Matrix seafloor values. fishpop_values Matrix population created setup_fishpop.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_starting_values ‚Äî get_starting_values","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_starting_values ‚Äî get_starting_values","text":"Get mean starting values run_simulation. Includes values ) bg_biomass, ii) ag_biomass, iii) nutrients_pool, iv) detritus_pool, v) pop_n, vi) pop_mean_size. function needed values can include stochasticity  thus differ starting values.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/get_starting_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_starting_values ‚Äî get_starting_values","text":"","code":"if (FALSE) { get_starting_values(seafloor_values = seafloor_values, fishpop_values = fishpop_values) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"mdlrn_to_raster ‚Äî mdlrn_to_raster","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"Convert mdl_rn object RasterBrick.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"","code":"mdlrn_to_raster(mdl_rn, verbose = TRUE, ...)"},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"mdl_rn mdl_rn object created run_simulation. verbose TRUE, progress reports printed. ... Additional arguments passed raster.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"RasterBrick","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"Function convert environment (seafloor) previous mdl_rn object RasterBrick. Thus, created environment final values provided mdl_rn object cell values. Can used sarting seafloor new simulation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/mdlrn_to_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mdlrn_to_raster ‚Äî mdlrn_to_raster","text":"","code":"if (FALSE) { mdlrn_to_raster(mdl_rn = result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot.mdl_rn.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.mdl_rn ‚Äî plot.mdl_rn","title":"plot.mdl_rn ‚Äî plot.mdl_rn","text":"Plotting method mdl_rn object.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot.mdl_rn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.mdl_rn ‚Äî plot.mdl_rn","text":"","code":"# S3 method for mdl_rn plot(   x,   what = \"seafloor\",   summarize = FALSE,   timestep = x$max_i,   limits = NULL,   burn_in = TRUE,   normalize = FALSE,   base_size = 10,   verbose = TRUE,   ... )"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot.mdl_rn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.mdl_rn ‚Äî plot.mdl_rn","text":"x mdl_rn object simulation run. Character specifying plot. summarize Character specify values environmental data used fill. timestep Integer specify timestep plotted. limits Named list vectors min maximum value values. burn_in TRUE, line indicate burn-time plotted. normalize Logical TRUE count divided timesteps. base_size Numeric specify base font size. verbose TRUE, progress reports printed. ... used.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot.mdl_rn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.mdl_rn ‚Äî plot.mdl_rn","text":"Plotting method model run results simulated run_simulation. arguments allows either plot seafloor values fishpop values. , possible either plot spatial raster certain timestep summarize = FALSE summary values saved  timestep summarize = TRUE. spatial raster plotted, limits can set identical. information see get_limits.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot.mdl_rn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.mdl_rn ‚Äî plot.mdl_rn","text":"","code":"if (FALSE) { plot(result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_allocation ‚Äî plot_allocation","title":"plot_allocation ‚Äî plot_allocation","text":"Plotting method seagrass growth allocation ratio.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_allocation ‚Äî plot_allocation","text":"","code":"plot_allocation(parameters, base_size = 10)"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_allocation ‚Äî plot_allocation","text":"parameters List model parameters. base_size Numeric specify base font size.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_allocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_allocation ‚Äî plot_allocation","text":"Plotting method allocation ratio rule used seagrass growth dynamics. information see rcpp_seagrass_growth rcpp_allocation_ratio.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_allocation ‚Äî plot_allocation","text":"","code":"plot_allocation(parameters = arrR_parameters)"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_production.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_production ‚Äî plot_production","title":"plot_production ‚Äî plot_production","text":"Plotting method production.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_production ‚Äî plot_production","text":"","code":"plot_production(result, lag = TRUE, base_size = 10)"},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_production ‚Äî plot_production","text":"result mdl_rn object simulation run. lag Logical cumulative difference previous timestep returned. base_size Numeric specify base font size.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_production.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_production ‚Äî plot_production","text":"Plotting method ag bg production seagrass growth.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/plot_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_production ‚Äî plot_production","text":"","code":"if (FALSE) { plot_production(result = result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/print.mdl_rn.html","id":null,"dir":"Reference","previous_headings":"","what":"print.mdl_rn ‚Äî print.mdl_rn","title":"print.mdl_rn ‚Äî print.mdl_rn","text":"Printing method mdl_rn object.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/print.mdl_rn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.mdl_rn ‚Äî print.mdl_rn","text":"","code":"# S3 method for mdl_rn print(x, timestep = x$max_i, digits = 3, ...)"},{"path":"https://allgeier-lab.github.io/arrR/reference/print.mdl_rn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.mdl_rn ‚Äî print.mdl_rn","text":"x mdl_rn object. timestep Numeric timestep print. digits Numeric decimal places (round). ... Arguments passed cat.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/print.mdl_rn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.mdl_rn ‚Äî print.mdl_rn","text":"Printing method model run results simulated run_simulation. Includes information model run distribution values (min, mean, max) values seafloor fishpop.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/print.mdl_rn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.mdl_rn ‚Äî print.mdl_rn","text":"","code":"if (FALSE) { print(result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"Rcpp allocation ratio.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"","code":"rcpp_allocation_ratio(biomass, biomass_min, biomass_max, threshold, slope)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"biomass Numeric biomass. biomass_min, biomass_max Numeric minum maximum biomass. threshold, slope Numeric function parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"Get ratio bg ag nutrient allocation. ratio = 1, nutrients allocated bg biomass. threshold positive, ratio r=1 biomass values threshold. threshold negative, ratio r=0.5 threshold.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_allocation_ratio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_allocation_ratio ‚Äî rcpp_allocation_ratio","text":"User wmsmith CrossValidated: \"formula s-shaped curve domain range [0,1]?\" <https://stats.stackexchange.com/questions/214877/>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"Rcpp get cell xy","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"","code":"rcpp_cell_from_xy(x, y, extent, dimensions, rcpp)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"x, y Numeric x,y coordinates. extent Vector extent (xmin, xmax, ymin, ymax). dimensions Vector number rows cols rcpp Logical TRUE Rcpp index returned.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"int","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"Get cell ID xy coordinate. Allows one coordinate pair time. rcpp = TRUE indexing starts 0 accordance C++.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_cell_from_xy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_cell_from_xy ‚Äî rcpp_cell_from_xy","text":"Code adapted Robert J. Hijmans (2020). raster: Geographic Data Analysis Modeling. R package version 3.4-5. <https://CRAN.R-project.org/package=raster>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_closest_reef.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_closest_reef ‚Äî rcpp_closest_reef","title":"rcpp_closest_reef ‚Äî rcpp_closest_reef","text":"Rcpp get closest reef.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_closest_reef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_closest_reef ‚Äî rcpp_closest_reef","text":"","code":"rcpp_closest_reef(x, y, coords_reef)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_closest_reef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_closest_reef ‚Äî rcpp_closest_reef","text":"x, y Numeric xy coords current individual. coords_reef Matrix ID coords reef cells.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_closest_reef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_closest_reef ‚Äî rcpp_closest_reef","text":"vector","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_closest_reef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_closest_reef ‚Äî rcpp_closest_reef","text":"Get ID distance closet reef cell. first element returning vector ID, second distance meter.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"Rcpp convert nutrients.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"","code":"rcpp_convert_nutr(x, to)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"x Numeric nutrient amount. String specify unit convert.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"double","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"Convert nutrients g umol based molecular mass (ammonium; NH4)","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_convert_nutr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_convert_nutr ‚Äî rcpp_convert_nutr","text":"<https://en.wikipedia.org/wiki/Ammonium>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_diffuse_values.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","title":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","text":"Rcpp simulate diffusion values.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_diffuse_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","text":"","code":"rcpp_diffuse_values(   seafloor,   cell_adj,   nutrients_diffusion,   detritus_diffusion,   detritus_fish_diffusion )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_diffuse_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","text":"seafloor Matrix seafloor values. cell_adj Matrix cell adjacencies. nutrients_diffusion, detritus_diffusion, detritus_fish_diffusion Numeric parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_diffuse_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_diffuse_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_diffuse_values ‚Äî rcpp_diffuse_values","text":"Simulates diffusion certain share ) nutrients_pool, ii) detritus_pool, iii) detritus_fish_diffusion cell neighboring cells. Scheduling simulated pseudo-simultaneous.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"Rcpp simulate fishpop growth.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"","code":"rcpp_fishpop_growth(   fishpop,   fishpop_track,   seafloor,   pop_k,   pop_linf,   pop_a,   pop_b,   pop_n_body,   pop_reserves_max,   pop_reserves_consump,   extent,   dimensions,   min_per_i )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"fishpop, fishpop_track Matrix fishpop values starting population. seafloor Matrix seafloor values. pop_k, pop_linf, pop_a, pop_b Numeric parameters. pop_n_body, pop_reserves_max, min_per_i Numeric parameters. pop_reserves_consump Double consumption limit fill reserves timestep. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"Function simulate consumption, mortality, growth excretion fish individuals. First fish individual follow von Bertalanffy growth curve corresponding amount nutrients calculated based bioenergetics model (Allgeier et al. 2020). nutrients consumed detritus_pool cell individual located . available amount big enough, fish can either use reserves die (see rcpp_reincarnate). Last, detritus pool big enough, individuals can additionally fill reserves. individuals within behavior 1 2 (movement = behav), consumption requirement must met reserves . 0 > pop_reserves_consump < 1, ratio pop_reserves_max can consumed timestep.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_fishpop_growth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_fishpop_growth ‚Äî rcpp_fishpop_growth","text":"Allgeier, J.E., Cline, T.J., Walsworth, T.E., Wathen, G., Layman, C.., Schindler, D.E., 2020. Individual behavior drives ecosystem function impacts harvest. Sci. Adv. 6, eaax8329. <https://doi.org/10.1126/sciadv.aax8329> Froese, R., Pauly, D., 2019. FishBase. World Wide Web electronic publication [WWW Document]. <www.fishbase.org>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_get_bearing.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_get_bearing ‚Äî rcpp_get_bearing","title":"rcpp_get_bearing ‚Äî rcpp_get_bearing","text":"Rcpp get bearing two coordinate pairs.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_get_bearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_get_bearing ‚Äî rcpp_get_bearing","text":"","code":"rcpp_get_bearing(x1, y1, x2, y2)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_get_bearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_get_bearing ‚Äî rcpp_get_bearing","text":"x1, y1 Double first xy coords pair. x2, y2 Double second xy coords pair.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_get_bearing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_get_bearing ‚Äî rcpp_get_bearing","text":"double","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_get_bearing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_get_bearing ‚Äî rcpp_get_bearing","text":"Get bearing (x1,y1) (x2,y2).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_mineralization ‚Äî rcpp_mineralization","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"Rcpp simulate mineralization.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"","code":"rcpp_mineralization(seafloor, detritus_mineralization, detritus_fish_decomp)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"seafloor Matrix seafloor values. detritus_fish_decomp, detritus_mineralization seafloor Numeric parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"Simulate mineralization detritus pool .e., ratio detritus_pool added nutrients_pool. corresponding amount removed detritus_pool. Also, simulates decomposition detritus_fish_pool removing ratio adding detritus_pool.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mineralization.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_mineralization ‚Äî rcpp_mineralization","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. <https://doi.org/10.1007/978-94-011-2342-6>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_modify_degree.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_modify_degree ‚Äî rcpp_modify_degree","title":"rcpp_modify_degree ‚Äî rcpp_modify_degree","text":"Rcpp modify degree.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_modify_degree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_modify_degree ‚Äî rcpp_modify_degree","text":"","code":"rcpp_modify_degree(x, y)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_modify_degree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_modify_degree ‚Äî rcpp_modify_degree","text":"x Numeric current angle degree. y Numeric change degree (negative positive).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_modify_degree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_modify_degree ‚Äî rcpp_modify_degree","text":"double","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_modify_degree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_modify_degree ‚Äî rcpp_modify_degree","text":"Modify degree direction heading individuals. function ensures degree 0 <= x <= 360.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mortality.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_mortality ‚Äî rcpp_mortality","title":"rcpp_mortality ‚Äî rcpp_mortality","text":"Rcpp simulate (background) mortality.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mortality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_mortality ‚Äî rcpp_mortality","text":"","code":"rcpp_mortality(   fishpop,   fishpop_track,   seafloor,   pop_linf,   pop_n_body,   pop_reserves_max,   extent,   dimensions )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mortality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_mortality ‚Äî rcpp_mortality","text":"fishpop, fishpop_track Matrix fishpop starting fishpop values. seafloor Matrix seafloor values. pop_linf, pop_n_body, pop_reserves_max Numeric parameters. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mortality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_mortality ‚Äî rcpp_mortality","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_mortality.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_mortality ‚Äî rcpp_mortality","text":"Function simulate background mortality fish individuals. mortality probability increases increasing size approximates p = 1 pop_linf. individual dies, new individual created using rcpp_reincarnate.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_behav.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_move_behav ‚Äî rcpp_move_behav","title":"rcpp_move_behav ‚Äî rcpp_move_behav","text":"Rcpp simulate movement based bioenergetics.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_behav.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_move_behav ‚Äî rcpp_move_behav","text":"","code":"rcpp_move_behav(   fishpop,   coords_reef,   pop_reserves_thres,   move_mean,   move_var,   move_reef,   move_border,   move_return,   max_dist,   extent,   dimensions )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_behav.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_move_behav ‚Äî rcpp_move_behav","text":"fishpop Matrix fishpop values. coords_reef Matrix ID coords reef cells. pop_reserves_thres Vector threshold pop_reserves_max drain prior foraging. move_mean, move_var Double mean movement parameter. move_reef Double mean movement distance sheltering reef. move_border Double movement distance surrounds reef cell border. move_return Double mean movement distance returning reef. max_dist Maximum distance individual can move. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_behav.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_move_behav ‚Äî rcpp_move_behav","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_behav.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_move_behav ‚Äî rcpp_move_behav","text":"Fish individualsmove based much nutrients stored reserves. three different movement behaviors. reserves certain threshold, individuals either shelter reef cells (behavior 1) move back towards reef cells (behavior 2). reserves threshold, individuals move randomly across environment forage.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_rand.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_move_rand ‚Äî rcpp_move_rand","title":"rcpp_move_rand ‚Äî rcpp_move_rand","text":"Rcpp simulate random/attracted movement.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_rand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_move_rand ‚Äî rcpp_move_rand","text":"","code":"rcpp_move_rand(   fishpop,   coords_reef,   move_mean,   move_var,   max_dist,   reef_attraction,   extent,   dimensions )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_rand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_move_rand ‚Äî rcpp_move_rand","text":"fishpop Matrix fishpop values. coords_reef Matrix ID coords reef cells. move_mean, move_var Double mean variance movement parameter. max_dist Numeric maximum movement distance reef_attraction Bool attracted towards reef. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_rand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_move_rand ‚Äî rcpp_move_rand","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_rand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_move_rand ‚Äî rcpp_move_rand","text":"Simulate movemnt indivudals eiter either random (reef_attraction = FALSE) attracted towards artifical reef cells (reef_attraction = TRUE). case random movement, timestep random movement distance drawn lognorm distribution individal moves random heading direction drawn uniform distribution. case attracted movement, fish individuals aware distance closest reef cell three directions ahead (-45, 0, 45 degree) always swim direction shortest distance reef cell.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_move_wrap ‚Äî rcpp_move_wrap","title":"rcpp_move_wrap ‚Äî rcpp_move_wrap","text":"Rcpp movement behavior wrapper.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_move_wrap ‚Äî rcpp_move_wrap","text":"","code":"rcpp_move_wrap(   fishpop,   coords_reef,   movement,   pop_reserves_thres,   move_mean,   move_var,   move_reef,   move_border,   move_return,   max_dist,   extent,   dimensions )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_move_wrap ‚Äî rcpp_move_wrap","text":"fishpop Matrix fishpop values. coords_reef Matrix ID coords reef cells. movement String specifing movement algorithm. Either 'rand', 'attr' 'behav'. pop_reserves_thres Vector threshold pop_reserves_max drain prior foraging. move_mean, move_var Double mean movement parameter. move_reef Double mean movement distance sheltering reef. move_border Double movement distance surrounds reef cell border. move_return Double mean movement distance returning reef. max_dist Maximum distance individual can move. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_move_wrap ‚Äî rcpp_move_wrap","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_move_wrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_move_wrap ‚Äî rcpp_move_wrap","text":"Wrapper function around different movement algorithms. Individuals can either move completely random (movement = \"rand\"), attracted towards artifical reef cells movement = \"attr\" movement can  depending bioenergetics fish individuals movement = \"behav\". information see rcpp_move_rand, rcpp_move_rand rcpp_move_behav.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_nutr_input ‚Äî rcpp_nutr_input","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"Rcpp simulate nutrient input.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"","code":"rcpp_nutr_input(seafloor, nutr_input)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"seafloor Matrix seafloor values. nutr_input Vector amount nutrient input timestep.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"Simulate external nutrient input cell. nutr_input vector must many elements max_i add input timestep. nutrients added, set values nutr_input zero.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_input.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_nutr_input ‚Äî rcpp_nutr_input","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. <https://doi.org/10.1007/978-94-011-2342-6>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_nutr_output ‚Äî rcpp_nutr_output","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"Rcpp nutrient output.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"","code":"rcpp_nutr_output(seafloor, nutrients_output, detritus_output)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"seafloor Matrix seafloor values. nutrients_output, detritus_output Double fraction removed cell.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"Simulates loss nutrients (.e., output system) cell timestep. loss calculated ratio present nutrients cell.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_output.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_nutr_output ‚Äî rcpp_nutr_output","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. <https://doi.org/10.1007/978-94-011-2342-6>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"Rcpp nutrient uptake.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"","code":"rcpp_nutr_uptake(nutrients, biomass, v_max, k_m, time_frac)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"nutrients, biomass Numeric nutrient biomass amount cell. v_max, k_m, time_frac Numeric parameters","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"double","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"Calculate nutrient uptake cells depending avaiable nutrients water column biomass. values scaled time period can specified time_frac. uptaken nutrients removed pool. calculated uptake exceeds available amount,  available amount taken .","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_nutr_uptake.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_nutr_uptake ‚Äî rcpp_nutr_uptake","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. <https://doi.org/10.1007/978-94-011-2342-6> Lee, K.-S., Dunton, K.H., 1999. Inorganic nitrogen acquisition seagrass Thalassia testudinum: Development whole-plant nitrogen budget. Limnol. Oceanogr. 44, 1204‚Äì1215. <https://doi.org/10.4319/lo.1999.44.5.1204>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_reincarnate.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_reincarnate ‚Äî rcpp_reincarnate","title":"rcpp_reincarnate ‚Äî rcpp_reincarnate","text":"Rcpp reincarnate fish indivudals.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_reincarnate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_reincarnate ‚Äî rcpp_reincarnate","text":"","code":"rcpp_reincarnate(   fishpop,   fishpop_track,   fish_id,   seafloor,   extent,   dimensions,   pop_linf,   pop_n_body,   pop_reserves_max,   reason )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_reincarnate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_reincarnate ‚Äî rcpp_reincarnate","text":"fishpop, fishpop_track Matrix fishpop starting fishpop values. fish_id Vector id fish corresponding cell ids. seafloor Matrix seafloor values. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol). pop_linf, pop_n_body, pop_reserves_max Numeric parameters. reason String reason reincarnation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_reincarnate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_reincarnate ‚Äî rcpp_reincarnate","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_reincarnate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_reincarnate ‚Äî rcpp_reincarnate","text":"Creates new individual mortality event. new individual value just died individual beginning simulation (.e., timestep zero). mass difference (.e. current mass minus mass timestep zero) plus reserves died individual added detritus pool. reincarnated individual tries fill reserves detritus pool enough nutrients available.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_respiration ‚Äî rcpp_respiration","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"Rcpp simulate respration.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"","code":"rcpp_respiration(   fishpop,   resp_intercept,   resp_slope,   resp_temp_low,   resp_temp_max,   resp_temp_optm,   water_temp,   min_per_i )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"fishpop Matrix fishpop values. resp_intercept, resp_slope Numeric regression parameters. resp_temp_low, resp_temp_max, resp_temp_optm Numeric water temperature parameters. water_temp, min_per_i Numeric various parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"Function simulate respiration fish population individuals based movement, body size water temperature. respiration temperature dependent activity multiplier (Hanson et al. 1997). Originally descibed Kitchell et al. (1977). respiration infinite number (due zero division), set respiration = 1.0.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_respiration.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_respiration ‚Äî rcpp_respiration","text":"Hanson, P.C., Johnson, T.B., Schindler, D.E., Kitchell, J.F., 1997. Fish Bioenergetics 3.0 Windows manual (Manual). University Wisconsin-Madison, Centre Limnology, Madison,USA. Kitchell, J.F., Stewart, D.J., Weininger, D., 1977. Applications bioenergetics model Yellow Perch (Perca flavescens) Walleye (Stizostedion vitreum vitreum). J. Fish. Res. Bd. Can. 34, 1922‚Äì1935. <https://doi.org/10.1139/f77-258>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_rlognorm ‚Äî rcpp_rlognorm","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"Rcpp rlognorm.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"","code":"rcpp_rlognorm(mean, sd, min, max)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"mean Double mean. sd Double sd min, max Double boundaries.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"double","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"Draws random number log-norm distribution. Function uses log-transformed values normal distribution internally.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_rlognorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_rlognorm ‚Äî rcpp_rlognorm","text":"Truncated normal distribution : J.B. Duck-Mayr (2018). RcppDist: 'Rcpp' Integration Additional Probability Distributions. R package version 0.1.1. <https://CRAN.R-project.org/package=RcppDist>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"Rcpp seagrass growth sub-process.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"","code":"rcpp_seagrass_growth(   seafloor,   cells_reef,   bg_v_max,   bg_k_m,   bg_gamma,   ag_v_max,   ag_k_m,   ag_gamma,   bg_biomass_max,   bg_biomass_min,   ag_biomass_max,   ag_biomass_min,   seagrass_thres,   seagrass_slope,   seagrass_slough,   time_frac )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"seafloor Matrix seafloor values. cells_reef Vector ID reef cells. bg_v_max, bg_k_m, bg_gamma, ag_v_max, ag_k_m, ag_gamma Numeric uptake parameters. bg_biomass_max, bg_biomass_min, ag_biomass_max, ag_biomass_min Numerich biomass values parameters. seagrass_slough, seagrass_thres, seagrass_slope, time_frac Numerich various parameters.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"Function simulate processes aboveground belowground seagrass slough growth. processes simulated adapted DeAngelis (1992). First, amount bg ag slough calculated pased seagrass_slough. ratio additionally decreased smaller biomass gets approximates zero minimum capacity cell. Second, amount nutrients taken water column depend biomass available nutrients cell. Third, allocation uptake bg ag biomass depends uptake amount, amount sloughed biomass corresponding capacities bg ag cells. Additional growth (slough neutralised) depends allocation ratio, can plotted using plot_allocation. Fourth, cells biomass maximum capacity slough additional biomass.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_seagrass_growth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_seagrass_growth ‚Äî rcpp_seagrass_growth","text":"DeAngelis, D.L., 1992. Dynamics Nutrient Cycling Food Webs. Springer Netherlands, Dordrecht. <https://doi.org/10.1007/978-94-011-2342-6>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_shuffle ‚Äî rcpp_shuffle","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"Rcpp shuffle vector.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"","code":"rcpp_shuffle(min, max)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"min, max Integer minimum maximum value vector.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"vector","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"Creates vector IDs min max, random order.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_shuffle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_shuffle ‚Äî rcpp_shuffle","text":"use time-based seed taken <http://www.cplusplus.com/reference/algorithm/shuffle/>","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_sim_processes ‚Äî rcpp_sim_processes","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"Rcpp run simulation.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"","code":"rcpp_sim_processes(   seafloor,   fishpop,   seafloor_track,   fishpop_track,   parameters,   pop_n,   movement,   max_dist,   pop_reserves_thres,   coords_reef,   cell_adj,   extent,   dimensions,   nutr_input,   max_i,   min_per_i,   save_each,   seagrass_each,   burn_in,   verbose )"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"seafloor, fishpop Matrix seafloor fishpop data. seafloor_track, fishpop_track List entry saving timestep. parameters List parameters. pop_n Integer number individuals. movement String specifing movement algorithm. Either 'rand', 'attr' 'behav'. max_dist Double maximum movement distance. pop_reserves_thres Vector threshold pop_reserves_max drain prior foraging. coords_reef Matrix ID coords reef cells. cell_adj Matrix cell adjacencies. extent Vector extent (xmin,xmax,ymin,ymax). dimensions Vector dimensions (nrow, ncol). nutr_input Vector amount nutrient input timestep. max_i Integer maximum number simulation timesteps. min_per_i Integer specify minutes per . save_each Numeric often data saved return. seagrass_each Integer often (* x) seagrass dynamics simulated. burn_in Numeric timesteps used burn . verbose TRUE, progress reports printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"functions 'wrapper' around following sub-processes: () nutrient input, (ii) seagrass growth, (iii) detritus mineralization, (iv) movement individuals, (v) respiration individuals, (vi) growth individuals, (vii) mortality individuals, (viii) diffusion nutrients/detritus, ix) nutrient output.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_sim_processes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rcpp_sim_processes ‚Äî rcpp_sim_processes","text":"detailed model description see Esquivel, K.E., Hesselbarth, M.H.K., Allgeier, J.E. Mechanistic support increased primary production around artificial reefs. Manuscript submitted publication.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_translate_torus.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_translate_torus ‚Äî rcpp_translate_torus","title":"rcpp_translate_torus ‚Äî rcpp_translate_torus","text":"Rcpp translate coordinates around torus.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_translate_torus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_translate_torus ‚Äî rcpp_translate_torus","text":"","code":"rcpp_translate_torus(x, y, extent)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_translate_torus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_translate_torus ‚Äî rcpp_translate_torus","text":"x, y Double x,y coordinates extent Vector extent (xmin,xmax,ymin,ymax).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_translate_torus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_translate_torus ‚Äî rcpp_translate_torus","text":"vector","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_translate_torus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_translate_torus ‚Äî rcpp_translate_torus","text":"Torus translation coordinates exceed provided extent. translation done coordinate within extent (.e., translated several times difference big).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_update_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"rcpp_update_coords ‚Äî rcpp_update_coords","title":"rcpp_update_coords ‚Äî rcpp_update_coords","text":"Rcpp update coordinates.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_update_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rcpp_update_coords ‚Äî rcpp_update_coords","text":"","code":"rcpp_update_coords(fishpop, i, move_dist, max_dist, extent)"},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_update_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rcpp_update_coords ‚Äî rcpp_update_coords","text":"fishpop Matrix fishpop values. Integer row id. move_dist, max_dist Numeric (maximum) movement distance. extent Vector extent study area.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_update_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rcpp_update_coords ‚Äî rcpp_update_coords","text":"void","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/rcpp_update_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rcpp_update_coords ‚Äî rcpp_update_coords","text":"Update xy coordinates activity fish individuals depending move_dist.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"read_parameters ‚Äî read_parameters","title":"read_parameters ‚Äî read_parameters","text":"Read parameters text file.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_parameters ‚Äî read_parameters","text":"","code":"read_parameters(file, sep = \";\", return_list = TRUE, ...)"},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_parameters ‚Äî read_parameters","text":"file String path text file. sep String separator columns. return_list Logical TRUE parameters returned list. ... Arguments passed read.table.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_parameters ‚Äî read_parameters","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"read_parameters ‚Äî read_parameters","text":"Creates list parameters starting values. Columns must named 'parameter' 'value'.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/read_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read_parameters ‚Äî read_parameters","text":"","code":"if (FALSE) { read_parameters(file = \"starting-values.csv\", sep = \";\") }"},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"run_simulation ‚Äî run_simulation","title":"run_simulation ‚Äî run_simulation","text":"Core function run model.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_simulation ‚Äî run_simulation","text":"","code":"run_simulation(   seafloor,   fishpop,   movement = \"rand\",   parameters,   max_i,   min_per_i,   seagrass_each = 1,   save_each = 1,   burn_in = 0,   return_burnin = TRUE,   nutr_input = NULL,   verbose = TRUE )"},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_simulation ‚Äî run_simulation","text":"seafloor RasterBrick environment created setup_seafloor. fishpop Data.frame fish population created setup_fishpop. movement String specifing movement algorithm. Either 'rand', 'attr' 'behav'. parameters List model parameters. max_i Integer maximum number simulation timesteps. min_per_i Integer specify minutes per . seagrass_each Integer often (* x) seagrass dynamics simulated. save_each Numeric often data saved return. burn_in Numeric timesteps used burn . return_burnin FALSE timesteps < burn_in returned. nutr_input Vector amount nutrient input timestep. verbose TRUE, progress reports printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_simulation ‚Äî run_simulation","text":"mdl_rn","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run_simulation ‚Äî run_simulation","text":"core function arrR model allows easily run model. Besides running sub-processes, function also includes basic checks make sure model crash. However, ensure e.g. parameter values \"make sense\". function returns mdl_rn object stores besides model run results lot information model run specification many function can handle objects exist (e.g. plotting). functions 'wrapper' around following sub-processes: () nutrient input, (ii) seagrass growth, (iii) detritus mineralization, (iv) movement individuals, (v) respiration individuals, (vi) growth individuals, (vii) mortality individuals, (viii) diffusion nutrients/detritus, ix) nutrient output. movement argument allows either specify random movement individuals, attracted movement towards artificial reef individuals movement behavior based biosenergetics. nutr_input NULL, nutrient input simulated. also simulate nutrient output, set nutrients_output parameter zero. save_each > 1, iterations saved final mdl_rn object, timestep specified object. However, max_i must dividable save_each without rest. Similar,  seagrass_each allows simulate seagrass sub-processes specified timestep. burn_in > 0, sub-processes related fish individuals simulated timestep reached.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_simulation ‚Äî run_simulation","text":"detailed model description see Esquivel, K.E., Hesselbarth, M.H.K., Allgeier, J.E. Mechanistic support increased primary production around artificial reefs. Manuscript submitted publication.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/run_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run_simulation ‚Äî run_simulation","text":"","code":"if (FALSE) { reefs <- matrix(data = c(-1, 0, 0, 1, 1, 0, 0, -1, 0, 0), ncol = 2, byrow = TRUE)  seafloor <- setup_seafloor(dimensions = c(100, 100), grain = 1, reefs = reefs, starting_values = arrR_starting_values) fishpop <- setup_fishpop(seafloor = seafloor, starting_values = arrR_starting_values, parameters = arrR_parameters)  run_simulation(seafloor = seafloor, fishpop = fishpop, parameters = parameters, max_i = 1000, min_per_i = 120, save_each = 10) }"},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_envir_values.html","id":null,"dir":"Reference","previous_headings":"","what":"setup_envir_values ‚Äî setup_envir_values","title":"setup_envir_values ‚Äî setup_envir_values","text":"Setup environmental values seafloor.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_envir_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup_envir_values ‚Äî setup_envir_values","text":"","code":"setup_envir_values(   seafloor,   ag_biomass,   bg_biomass,   nutrients_pool,   detritus_pool,   random )"},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_envir_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup_envir_values ‚Äî setup_envir_values","text":"seafloor Raster* object. ag_biomass, bg_biomass, nutrients_pool Numeric starting values. detritus_pool Numeric parameter detritus fraction. random Numeric randomize input values 0 = 0 percent 1 = 100 percent.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_envir_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup_envir_values ‚Äî setup_envir_values","text":"RasterBrick","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_envir_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"setup_envir_values ‚Äî setup_envir_values","text":"Setup environmental values used setup_seafloor. function creates RasterBrick required values. incremental values increased model run set zero. function setup reef cells. random > 0, stochasticity added starting values using random ","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":null,"dir":"Reference","previous_headings":"","what":"setup_fishpop ‚Äî setup_fishpop","title":"setup_fishpop ‚Äî setup_fishpop","text":"Setup fish population model run.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup_fishpop ‚Äî setup_fishpop","text":"","code":"setup_fishpop(   seafloor,   starting_values,   parameters,   use_log = TRUE,   verbose = TRUE )"},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup_fishpop ‚Äî setup_fishpop","text":"seafloor Environment created setup_seafloor. starting_values List starting value parameters. parameters List model parameters. use_log Logical TRUE, random log distribution used. verbose TRUE, progress reports printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup_fishpop ‚Äî setup_fishpop","text":"data.frame","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"setup_fishpop ‚Äî setup_fishpop","text":"Function setup fish population. use_log = TRUE size distribution fish population follows log-norm distribution. information, see calc_size. fish created, set starting_values$pop_n = 0.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_fishpop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"setup_fishpop ‚Äî setup_fishpop","text":"","code":"reefs <- matrix(data = c(-1, 0, 0, 1, 1, 0, 0, -1, 0, 0), ncol = 2, byrow = TRUE)  seafloor <- setup_seafloor(dimensions = c(100, 100), grain = 1, reefs = reefs, starting_values = arrR_starting_values) #> > ...Creating seafloor with 100 rows x 100 cols... #> > ...Creating 5 artifical reef cells... fishpop <- setup_fishpop(seafloor = seafloor, starting_values = arrR_starting_values, parameters = arrR_parameters) #> > ...Creating 8 individuals within extent(-50, 50, -50, 50)..."},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_reefs.html","id":null,"dir":"Reference","previous_headings":"","what":"setup_reefs ‚Äî setup_reefs","title":"setup_reefs ‚Äî setup_reefs","text":"Setup reef cells seafloor.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_reefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup_reefs ‚Äî setup_reefs","text":"","code":"setup_reefs(object, xy, dimensions)"},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_reefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup_reefs ‚Äî setup_reefs","text":"object Raster* object xy 2-Column matrix coordinates artificial reefs dimensions Vector number rows columns (spatial dimensions).","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_reefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup_reefs ‚Äî setup_reefs","text":"RasterBrick","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_reefs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"setup_reefs ‚Äî setup_reefs","text":"Setup cell values artifice reefs (reef = 1) non-AR (reef = 0). Sets seafloor values AR NA/0. Used setup_seafloor.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":null,"dir":"Reference","previous_headings":"","what":"setup_seafloor ‚Äî setup_seafloor","title":"setup_seafloor ‚Äî setup_seafloor","text":"Setup seafloor model run.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup_seafloor ‚Äî setup_seafloor","text":"","code":"setup_seafloor(   dimensions,   grain,   reefs = NULL,   starting_values,   random = 0,   verbose = TRUE,   ... )"},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup_seafloor ‚Äî setup_seafloor","text":"dimensions Vector number rows columns (spatial dimensions). grain Vector size cells x- y-direction (spatial grain). reefs 2-Column matrix coordinates artificial reefs. starting_values List starting value parameters. random Numeric randomize input values 0 = 0 percent 1 = 100 percent. verbose TRUE, progress reports printed. ... Additional arguments passed raster.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup_seafloor ‚Äî setup_seafloor","text":"RasterBrick","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"setup_seafloor ‚Äî setup_seafloor","text":"Function setup environment (seafloor). center environment always set (0,0). bg_biomass ag_biomass values g dry weight. Nutrients_pool deritus_pool values g nutrients. Reef cells indicated reef = 1, whereas non-reef cells indicated reef = 0. values increased cumulative model run started run_simulation. random > 0, stochasticity added starting values using random x * (1 +- random) minimum maximum values, respectively.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/setup_seafloor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"setup_seafloor ‚Äî setup_seafloor","text":"","code":"reefs <- matrix(data = c(-1, 0, 0, 1, 1, 0, 0, -1, 0, 0), ncol = 2, byrow = TRUE)  seafloor <- setup_seafloor(dimensions = c(100, 100), grain = 1, reefs = reefs, starting_values = arrR_starting_values) #> > ...Creating seafloor with 100 rows x 100 cols... #> > ...Creating 5 artifical reef cells..."},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":null,"dir":"Reference","previous_headings":"","what":"summarize_mdlrn ‚Äî summarize_mdlrn","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"Summarize results model run.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"","code":"summarize_mdlrn(   result,   what = c(\"seafloor\", \"fishpop\"),   summary = c(\"min\", \"mean\", \"max\"),   verbose = TRUE )"},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"result mdl_rn object simulation run. Vector 'seafloor' /'fishpop' specifiy summarize. summary String summary functions. Must return one value used aggregate(). verbose Logical warning messages printed.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"list","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"Function summarize results timestep. summary argument allows specify summary statistics used cell. selected statistics used aggregate must return one value. seafloor ) ag_biomass, ii) bg_biomass, iii) nutrients_pool, iv) detritus_pool returned. fish population ) length, ii) weight, iii) died_consumption, iv) died_background returned.","code":""},{"path":"https://allgeier-lab.github.io/arrR/reference/summarize_mdlrn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summarize_mdlrn ‚Äî summarize_mdlrn","text":"","code":"if (FALSE) { summarize_mdlrn(result_rand) }"},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-13","dir":"Changelog","previous_headings":"","what":"arrR 1.3","title":"arrR 1.3","text":"Adding pkgdown homepage Add detritus_output rcpp_nutr_output Streamlined code summarize_mdlrn plot.mdl_rn Adding get_production plot_production function","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-12","dir":"Changelog","previous_headings":"","what":"arrR 1.2","title":"arrR 1.2","text":"Return pop_reserves_thres final mdl_rn object Fix bug get_density max_i selected timestep Return max_dist run_simulation Minor bugfix run_simulation fishpop 0 indiv provided","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-11","dir":"Changelog","previous_headings":"","what":"arrR 1.1","title":"arrR 1.1","text":"Fix bug run_simulation return nutr_input Export R Rcpp interfaces core functions Renamed starting_values parameters Renamed extent dimensions","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-10","dir":"Changelog","previous_headings":"","what":"arrR 1.0","title":"arrR 1.0","text":"Renamed rcpp_run_simulation rcpp_sim_processes Adding needed references Nested loop diffuse values rcpp_diffuse_values Improvment get_neighbors using modular division","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-051","dir":"Changelog","previous_headings":"","what":"arrR 0.5.1","title":"arrR 0.5.1","text":"Main simulation loop completely Rcpp rcpp_run_simulation Better tracking fish consumption excretion Age counter iterations Better name pop_reserves_* parameters Renamed setup_seafloor_mdlrn mdlrn_to_raster","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-050","dir":"Changelog","previous_headings":"","what":"arrR 0.5.0","title":"arrR 0.5.0","text":"Simpler allocation rule based curves. Adding new movement behaviors code based reserve Minor bugfixing rename many functions New plot_threshold function. Fix bug movement specify maximum movement distance based 95% distribution Remove rlognorm ‚Ä¶lol Remove extract_result Adding rcpp_shuffle Remove reef_dist Adding rcpp_update_coords Adding rcpp_allocation_ratio smoother sigmoid function Adding get_stable_values function Calling rcpp_ functions directly possible run_simulation Renamed detritus_ratio seagrass_slough Renamed detritus_fish_ratio detritus_fish_decomp Remove pop_want_reserves parameter. Fish always try fill reserves","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-040","dir":"Changelog","previous_headings":"","what":"arrR 0.4.0","title":"arrR 0.4.0","text":"Add simulate_input simulate_output Rename simulate_fishpop_growth simulate_growth","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-031","dir":"Changelog","previous_headings":"","what":"arrR 0.3.1","title":"arrR 0.3.1","text":"Add rlognorm better code structure","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-030","dir":"Changelog","previous_headings":"","what":"arrR 0.3.0","title":"arrR 0.3.0","text":"Update authors list Re-implement movement fish individuals Rcpp mainly Rename dead detritus fish detritus (corresponding parameters)","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-029","dir":"Changelog","previous_headings":"","what":"arrR 0.2.9","title":"arrR 0.2.9","text":"Fix bug starting values included mdl_rn object Change GPL3 license Fix bug rcpp_calc_seagrass_growth.cpp allocation rules","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-028","dir":"Changelog","previous_headings":"","what":"arrR 0.2.8","title":"arrR 0.2.8","text":"Add hexlogo Add extract_result function extract argument run_simulation Add bg_gamma ag_gamma parameters. hard-coded previously Better checking object mdl_rn Renamed master branch main","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-027","dir":"Changelog","previous_headings":"","what":"arrR 0.2.7","title":"arrR 0.2.7","text":"Add default parameters starting values data Add structure vignettes Use absolute iterations burn-Add return_burnin argument run_simulation","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-026","dir":"Changelog","previous_headings":"","what":"arrR 0.2.6","title":"arrR 0.2.6","text":"Adding burn-option run_simulation Track production, slough, nutrient uptake cumulative cell summarize_mdlrn returns burn_in column","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-025","dir":"Changelog","previous_headings":"","what":"arrR 0.2.5","title":"arrR 0.2.5","text":"Renamed filter_result filter_mdlrn Slight changes print.mdl_rn Rename summarize_result summarize_mdlrn allow select summary fun","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-024","dir":"Changelog","previous_headings":"","what":"arrR 0.2.4","title":"arrR 0.2.4","text":"Better memory usage using mainly Rcpp core functions Removed pop_max_size replace pop_linf_grunt","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-023","dir":"Changelog","previous_headings":"","what":"arrR 0.2.3","title":"arrR 0.2.3","text":"Add GitHub actions Resulting object contains parameters starting values get_limits can return limits time period plot.mdl_rn also takes limits summarize = TRUE seafloor","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-022","dir":"Changelog","previous_headings":"","what":"arrR 0.2.2","title":"arrR 0.2.2","text":"Better plotting labels Renamed parameters$detritus_decomposition parameter$detritus_mineralization","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-021","dir":"Changelog","previous_headings":"","what":"arrR 0.2.1","title":"arrR 0.2.1","text":"Reworked seagrass growth Rename package arrR Add pkgdown homepage","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-020","dir":"Changelog","previous_headings":"","what":"arrR 0.2.0","title":"arrR 0.2.0","text":"Speed RAM improvements many function Including Rcpp","code":""},{"path":"https://allgeier-lab.github.io/arrR/news/index.html","id":"arrr-010","dir":"Changelog","previous_headings":"","what":"arrR 0.1.0","title":"arrR 0.1.0","text":"First re-implementation model code","code":""}]
